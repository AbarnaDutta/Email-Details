name: Email Automation

on:
  schedule:
    - cron: '*/5 * * * *'  # Runs every 5 minutes
  workflow_dispatch:       # Manual trigger
  repository_dispatch:     # External service trigger

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create credentials file
      run: |
        echo "${{ secrets.CREDENTIALS_JSON }}" > credentials.json
        ls -l credentials.json  # List file to verify creation
        head -n 20 credentials.json  # Print the first 20 lines for verification
      shell: bash

    - name: Run script
      env:
        EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        CREDENTIALS_PATH: ./credentials.json
        SPREADSHEET_URL: ${{ secrets.SPREADSHEET_URL }}
        DRIVE_FOLDER_ID: ${{ secrets.DRIVE_FOLDER_ID }}
      run: python project.py
      continue-on-error: false  # Set to true to allow the workflow to continue even if the script fails

    - name: Archive logs
      if: failure()  # Only run if previous steps failed
      run: |
        mkdir -p logs
        cp project.log logs/  # Assuming your script logs to project.log
        tar -czf logs.tar.gz logs/
      shell: bash

    - name: Upload logs as artifact
      if: failure()  # Only upload if previous steps failed
      uses: actions/upload-artifact@v3
      with:
        name: logs
        path: logs.tar.gz
